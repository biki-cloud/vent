name: CI/CD
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Unit-Test:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Run Unit Tests
        run: |
          pnpm test:coverage
          ls -la coverage/
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
      - name: Save coverage summary
        if: github.event_name == 'pull_request'
        run: |
          if [ -f "coverage/coverage-summary.json" ]; then
            mkdir -p ./coverage-summary
            cp coverage/coverage-summary.json ./coverage-summary/summary.json
          else
            echo "No coverage report found"
            exit 1
          fi
      - uses: actions/upload-artifact@v4
        if: github.event_name == 'pull_request'
        with:
          name: coverage-summary
          path: coverage-summary/
          retention-days: 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jest-coverage-report
          path: coverage/
          retention-days: 30

  Deploy-Preview:
    needs: Unit-Test
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: preview
        run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> "${GITHUB_OUTPUT}"
    outputs:
      preview-url: ${{ steps.preview.outputs.url }}

  Comment-Deploy-Preview-URL:
    needs: Deploy-Preview
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            üöÄ „Éó„É¨„Éì„É•„Éº„Éá„Éó„É≠„Ç§„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ -> ${{ needs.Deploy-Preview.outputs.preview-url }}
          comment_tag: preview-deployment
          mode: recreate

  # Comment-Coverage:
  #   needs: Unit-Test
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: coverage-summary
  #         path: coverage-summary
  #     - name: Read coverage summary
  #       id: coverage
  #       run: |
  #         SUMMARY=$(cat coverage-summary/summary.json)
  #         # JSON„Çí„Ç®„Çπ„Ç±„Éº„Éó„Åó„Å¶1Ë°å„Å´Êï¥ÂΩ¢
  #         ESCAPED_SUMMARY=$(echo "$SUMMARY" | jq -c '.' | sed 's/"/\\"/g')
  #         echo "summary=$ESCAPED_SUMMARY" >> $GITHUB_OUTPUT
  #     - name: Format coverage report
  #       id: format
  #       run: |
  #         SUMMARY=$(cat coverage-summary/summary.json)
  #         STATEMENTS=$(echo "$SUMMARY" | jq -r '.total.statements.pct')
  #         BRANCHES=$(echo "$SUMMARY" | jq -r '.total.branches.pct')
  #         FUNCTIONS=$(echo "$SUMMARY" | jq -r '.total.functions.pct')
  #         LINES=$(echo "$SUMMARY" | jq -r '.total.lines.pct')
  #         echo "statements=$STATEMENTS" >> $GITHUB_OUTPUT
  #         echo "branches=$BRANCHES" >> $GITHUB_OUTPUT
  #         echo "functions=$FUNCTIONS" >> $GITHUB_OUTPUT
  #         echo "lines=$LINES" >> $GITHUB_OUTPUT
  # - name: Comment Coverage Report
  #   uses: thollander/actions-comment-pull-request@v2
  #   with:
  #     message: |
  #       ## üìä „ÉÜ„Çπ„Éà„Ç´„Éê„É¨„ÉÉ„Ç∏„É¨„Éù„Éº„Éà

  #       | È†ÖÁõÆ | „Ç´„Éê„É¨„ÉÉ„Ç∏ |
  #       |------|------------|
  #       | Statements | ${{ steps.format.outputs.statements }}% |
  #       | Branches | ${{ steps.format.outputs.branches }}% |
  #       | Functions | ${{ steps.format.outputs.functions }}% |
  #       | Lines | ${{ steps.format.outputs.lines }}% |
  #     comment_tag: coverage-report
  #     mode: recreate
  # - name: Debug JSON
  #   run: |
  #     echo "JSON content:"
  #     cat coverage-summary/summary.json
  #     echo "JSON structure:"
  #     jq '.' coverage-summary/summary.json

  E2E-Test:
    needs: Deploy-Preview
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Install dependencies
        run: pnpm exec playwright install --with-deps
      - name: Run tests
        if: always()
        run: |
          mkdir -p ./playwright-summary
          pnpm exec playwright test --reporter=dot,json
        env:
          NODE_ENV: development
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          BASE_URL: ${{ needs.Deploy-Preview.outputs.preview-url }}
      - name: Generate HTML report
        if: always()
        run: pnpm exec playwright show-report
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - uses: actions/upload-artifact@v4
        if: always() && github.event_name == 'pull_request'
        with:
          name: playwright-summary
          path: playwright-summary/
          retention-days: 1
